{"version":3,"file":"vanilla.js","sources":["../src/vanilla.ts"],"sourcesContent":["type SetStateInternal<T> = {\r\n    _(partial: T | Partial<T> | { _(state: T): T | Partial<T> }['_'], replace?: false): void\r\n    _(state: T | { _(state: T): T }['_'], replace: true): void\r\n}['_']\r\n\r\nexport interface StoreApi<T> {\r\n    setState: SetStateInternal<T>\r\n    getState: () => T\r\n    getInitialState: () => T\r\n    subscribe: (listener: (state: T, prevState: T) => void) => () => void\r\n}\r\n\r\nexport type ExtractState<S> = S extends { getState: () => infer T } ? T : never\r\n\r\ntype Get<T, K, F> = K extends keyof T ? T[K] : F\r\n\r\nexport type Mutate<S, Ms> = number extends Ms['length' & keyof Ms]\r\n    ? S\r\n    : Ms extends []\r\n      ? S\r\n      : Ms extends [[infer Mi, infer Ma], ...infer Mrs]\r\n        ? Mutate<StoreMutators<S, Ma>[Mi & StoreMutatorIdentifier], Mrs>\r\n        : never\r\n\r\nexport type StateCreator<\r\n    T,\r\n    Mis extends [StoreMutatorIdentifier, unknown][] = [],\r\n    Mos extends [StoreMutatorIdentifier, unknown][] = [],\r\n    U = T\r\n> = ((\r\n    setState: Get<Mutate<StoreApi<T>, Mis>, 'setState', never>,\r\n    getState: Get<Mutate<StoreApi<T>, Mis>, 'getState', never>,\r\n    store: Mutate<StoreApi<T>, Mis>\r\n) => U) & { $$storeMutators?: Mos }\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-object-type\r\nexport interface StoreMutators<S, A> {}\r\nexport type StoreMutatorIdentifier = keyof StoreMutators<unknown, unknown>\r\n\r\ntype CreateStore = {\r\n    <T, Mos extends [StoreMutatorIdentifier, unknown][] = []>(\r\n        initializer: StateCreator<T, [], Mos>\r\n    ): Mutate<StoreApi<T>, Mos>\r\n\r\n    <T>(): <Mos extends [StoreMutatorIdentifier, unknown][] = []>(\r\n        initializer: StateCreator<T, [], Mos>\r\n    ) => Mutate<StoreApi<T>, Mos>\r\n}\r\n\r\ntype CreateStoreImpl = <T, Mos extends [StoreMutatorIdentifier, unknown][] = []>(\r\n    initializer: StateCreator<T, [], Mos>\r\n) => Mutate<StoreApi<T>, Mos>\r\n\r\nconst createStoreImpl: CreateStoreImpl = (createState) => {\r\n    type TState = ReturnType<typeof createState>\r\n    type Listener = (state: TState, prevState: TState) => void\r\n    let state: TState\r\n    const listeners: Set<Listener> = new Set()\r\n\r\n    const setState: StoreApi<TState>['setState'] = (partial, replace) => {\r\n        // TODO: Remove type assertion once https://github.com/microsoft/TypeScript/issues/37663 is resolved\r\n        // https://github.com/microsoft/TypeScript/issues/37663#issuecomment-759728342\r\n        const nextState = typeof partial === 'function' ? (partial as (state: TState) => TState)(state) : partial\r\n        if (!Object.is(nextState, state)) {\r\n            const previousState = state\r\n            state =\r\n                (replace ?? (typeof nextState !== 'object' || nextState === null))\r\n                    ? (nextState as TState)\r\n                    : Object.assign({}, state, nextState)\r\n            listeners.forEach((listener) => listener(state, previousState))\r\n        }\r\n    }\r\n\r\n    const getState: StoreApi<TState>['getState'] = () => state\r\n\r\n    const getInitialState: StoreApi<TState>['getInitialState'] = () => initialState\r\n\r\n    const subscribe: StoreApi<TState>['subscribe'] = (listener) => {\r\n        listeners.add(listener)\r\n        // Unsubscribe\r\n        return () => listeners.delete(listener)\r\n    }\r\n\r\n    const api = { setState, getState, getInitialState, subscribe }\r\n    const initialState = (state = createState(setState, getState, api))\r\n    return api as any\r\n}\r\n\r\nexport const createStore = ((createState) =>\r\n    createState ? createStoreImpl(createState) : createStoreImpl) as CreateStore\r\n"],"names":[],"mappings":"AAqDA,MAAM,kBAAmC,CAAC,gBAAgB;AAGtD,MAAI;AACJ,QAAM,gCAA+B,IAAA;AAErC,QAAM,WAAyC,CAAC,SAAS,YAAY;AAGjE,UAAM,YAAY,OAAO,YAAY,aAAc,QAAsC,KAAK,IAAI;AAClG,QAAI,CAAC,OAAO,GAAG,WAAW,KAAK,GAAG;AAC9B,YAAM,gBAAgB;AACtB,cACK,YAAY,OAAO,cAAc,YAAY,cAAc,QACrD,YACD,OAAO,OAAO,CAAA,GAAI,OAAO,SAAS;AAC5C,gBAAU,QAAQ,CAAC,aAAa,SAAS,OAAO,aAAa,CAAC;AAAA,IAClE;AAAA,EACJ;AAEA,QAAM,WAAyC,MAAM;AAErD,QAAM,kBAAuD,MAAM;AAEnE,QAAM,YAA2C,CAAC,aAAa;AAC3D,cAAU,IAAI,QAAQ;AAEtB,WAAO,MAAM,UAAU,OAAO,QAAQ;AAAA,EAC1C;AAEA,QAAM,MAAM,EAAE,UAAU,UAAU,iBAAiB,UAAA;AACnD,QAAM,eAAgB,QAAQ,YAAY,UAAU,UAAU,GAAG;AACjE,SAAO;AACX;AAEO,MAAM,eAAe,CAAC,gBACzB,cAAc,gBAAgB,WAAW,IAAI;"}